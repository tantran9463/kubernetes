apiVersion: v1
kind: PersistentVolume
metadata:
  name: data-pv
  namespace: database
spec:
  capacity:
    storage: 5Gi
  accessModes:
  - ReadWriteOnce
  storageClassName: local-storage
  local:
    path: /home/admin/data-pv
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - u20-dev-test02

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: data-pvc
  namespace: database
spec:
  storageClassName: local-storage
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi

---

kind: Service
apiVersion: v1
metadata:
  labels:
    k8s-app: mongo
  name: mongo
  namespace: database
spec:
  type: NodePort
  ports:
    - port: 27017
      targetPort: 27017
      nodePort: 30017
  selector:
    k8s-app: mongo

---

kind: Deployment
apiVersion: apps/v1
metadata:
  labels:
    k8s-app: mongo
  name: mongo
  namespace: database
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      k8s-app: mongo
  template:
    metadata:
      labels:
        k8s-app: mongo
    spec:
      containers:
        - name: mongo
          image: mongo:latest
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              value: "admin"
            - name: MONGO_INITDB_ROOT_PASSWORD
              value: "Admin456@123"
            - name: MONGO_INITDB_DATABASE
              value: "admin"
          ports:
            - containerPort: 27017
              protocol: TCP
          volumeMounts:
            - name: mongo-vol
              mountPath: /data/db
              subPath: db
      volumes:
      - name: mongo-vol
        persistentVolumeClaim:
          claimName: data-pvc
      nodeSelector:
        "kubernetes.io/hostname": u20-dev-test02

---

kind: Service
apiVersion: v1
metadata:
  labels:
    k8s-app: sql
  name: sql
  namespace: database
spec:
  type: NodePort
  ports:
    - port: 1433
      targetPort: 1433
      nodePort: 30033
  selector:
    k8s-app: sql

---

kind: Deployment
apiVersion: apps/v1
metadata:
  labels:
    k8s-app: sql
  name: sql
  namespace: database
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      k8s-app: sql
  template:
    metadata:
      labels:
        k8s-app: sql
    spec:
      containers:
        - name: sql
          image: mcr.microsoft.com/mssql/server:2019-latest
          env:
            - name: ACCEPT_EULA
              value: "Y"
            - name: SA_PASSWORD
              value: "Billing@123."
          ports:
            - containerPort: 1433
              protocol: TCP
          volumeMounts:
            - name: sql-vol
              mountPath: /var/opt/mssql
              subPath: mssql
      volumes:
      - name: sql-vol
        persistentVolumeClaim:
          claimName: data-pvc
      nodeSelector:
        "kubernetes.io/hostname": u20-dev-test02
          
---

kind: Service
apiVersion: v1
metadata:
  labels:
    k8s-app: cassandra
  name: cassandra
  namespace: database
spec:
  type: NodePort
  ports:
    - port: 7000
      targetPort: 7000
      nodePort: 30070
  selector:
    k8s-app: cassandra

---

kind: Deployment
apiVersion: apps/v1
metadata:
  labels:
    k8s-app: cassandra
  name: cassandra
  namespace: database
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      k8s-app: cassandra
  template:
    metadata:
      labels:
        k8s-app: cassandra
    spec:
      containers:
        - name: cassandra
          image: cassandra
          ports:
            - containerPort: 7000
              protocol: TCP
          volumeMounts:
            - name: cassandra-vol
              mountPath: /var/lib/cassandra
              subPath: cassandra
      volumes:
      - name: cassandra-vol
        persistentVolumeClaim:
          claimName: data-pvc
      nodeSelector:
        "kubernetes.io/hostname": u20-dev-test02
          
---
