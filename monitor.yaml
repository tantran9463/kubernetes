apiVersion: v1
kind: PersistentVolume
metadata:
  name: monitor-pv
  namespace: monitor
spec:
  capacity:
    storage: 5Gi
  accessModes:
  - ReadWriteOnce
  storageClassName: local-storage
  local:
    path: /home/admin/monitor-pv
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - u20-dev-test02

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: monitor-pvc
  namespace: monitor
spec:
  storageClassName: local-storage
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi

---

kind: Service
apiVersion: v1
metadata:
  labels:
    k8s-app: node-exporter
  name: node-exporter
  namespace: monitor
spec:
  ports:
    - protocol: TCP
      port: 9100
      targetPort: 9100
  selector:
    k8s-app: node-exporter

---

kind: Deployment
apiVersion: apps/v1
metadata:
  labels:
    k8s-app: node-exporter
  name: node-exporter
  namespace: monitor
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      k8s-app: node-exporter
  template:
    metadata:
      labels:
        k8s-app: node-exporter
    spec:
      containers:
        - name: node-exporter
          image: quay.io/prometheus/node-exporter:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 9100
              protocol: TCP
      nodeSelector:
        "kubernetes.io/hostname": u20-dev-test02
          
---

apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: monitor
data:
  prometheus.rules: |-
    groups:
    - name: devopscube demo alert
      rules:
      - alert: High Pod Memory
        expr: sum(container_memory_usage_bytes) > 1
        for: 1m
        labels:
          severity: slack
        annotations:
          summary: High Memory Usage
  prometheus.yml: |-
    global:
      scrape_interval: 5s
      evaluation_interval: 5s
    rule_files:
      - /etc/prometheus/prometheus.rules
    alerting:
      alertmanagers:
      - scheme: http
        static_configs:
        - targets:
          - "alertmanager.prometheus.svc:9093"

    scrape_configs:
      - job_name: 'ingress-nginx-endpoints'
        kubernetes_sd_configs:
        - role: pod
          namespaces:
            names:
            - ingress-nginx
        relabel_configs:
        - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
          action: keep
          regex: true
        - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scheme]
          action: replace
          target_label: __scheme__
          regex: (https?)
        - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
          action: replace
          target_label: __metrics_path__
          regex: (.+)
        - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
          action: replace
          target_label: __address__
          regex: ([^:]+)(?::\d+)?;(\d+)
          replacement: $1:$2
        - source_labels: [__meta_kubernetes_service_name]
          regex: prometheus-server
          action: drop
      - job_name: 'prometheus'
        static_configs:
        - targets: ['prometheus.monitor:9090',
                    'cadvisor.monitor:8080',
                    'node-exporter.monitor:9100',
                    'kong.api-gateway:8001',
                    'kube-state-metrics.kube-system:8080',
                    'kube-state-metrics.kube-system:8081',
                    'registry.docker:5001',
                    'jaeger.trace-log:14269',
                    'rabbitmq.service:15692']
       
---

kind: Service
apiVersion: v1
metadata:
  labels:
    k8s-app: prometheus
  name: prometheus
  namespace: monitor
spec:
  ports:
    - protocol: TCP
      port: 9090
      targetPort: 9090
  selector:
    k8s-app: prometheus

---

kind: Deployment
apiVersion: apps/v1
metadata:
  labels:
    k8s-app: prometheus
  name: prometheus
  namespace: monitor
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      k8s-app: prometheus
  template:
    metadata:
      labels:
        k8s-app: prometheus
    spec:
      containers:
        - name: prometheus
          image: prom/prometheus
          imagePullPolicy: Always
          args:
            - '--storage.tsdb.retention=6h'
            - '--storage.tsdb.path=/prometheus'
            - '--config.file=/etc/prometheus/prometheus.yml'
          ports:
            - containerPort: 9090
              protocol: TCP
          volumeMounts:
            - name: config-volume
              mountPath: /etc/prometheus
            - name: data
              mountPath: /prometheus
              subPath: prometheus
      nodeSelector:
        "kubernetes.io/hostname": u20-dev-test02
      volumes:
        - name: config-volume
          configMap:
            name: prometheus-config
        - name: data
          persistentVolumeClaim:
            claimName: monitor-pvc

---

kind: Service
apiVersion: v1
metadata:
  labels:
    k8s-app: cadvisor
  name: cadvisor
  namespace: monitor
spec:
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
  selector:
    k8s-app: cadvisor

---

kind: Deployment
apiVersion: apps/v1
metadata:
  labels:
    k8s-app: cadvisor
  name: cadvisor
  namespace: monitor
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      k8s-app: cadvisor
  template:
    metadata:
      labels:
        k8s-app: cadvisor
    spec:
      containers:
        - name: cadvisor
          image: gcr.io/cadvisor/cadvisor:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
              protocol: TCP
      nodeSelector:
        "kubernetes.io/hostname": u20-dev-test02
          
---

apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-config
  namespace: monitor
data:
  grafana.ini: |
    [server]
    ;domain = example.com
    root_url = %(protocol)s://%(domain)s:%(http_port)s/grafana/
    serve_from_sub_path = true
    #################################### SMTP / Emailing ##########################
    [smtp]
    enabled = true
    host = email-smtp.us-west-2.amazonaws.com:587
    user = AKIAIDXPDN5Q3OA27AAQ
    # If the password contains # or ; you have to wrap it with triple quotes. Ex """#password;"""
    password = AlI9yHUbWiWxVJn4fkqLyXQRac5Oc7SL2K2I0yd6r06F
    ;cert_file =
    ;key_file =
    ;skip_verify = false
    from_address = admin@vietmap.vn
    from_name = Grafana
    # EHLO identity in SMTP dialog (defaults to instance_name)
    ;ehlo_identity = dashboard.example.com
    # SMTP startTLS policy (defaults to 'OpportunisticStartTLS')
    startTLS_policy = StartTLS
      
---

kind: Service
apiVersion: v1
metadata:
  labels:
    k8s-app: grafana
  name: grafana
  namespace: monitor
spec:
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 3000
  selector:
    k8s-app: grafana
    
---

kind: Deployment
apiVersion: apps/v1
metadata:
  labels:
    k8s-app: grafana
  name: grafana
  namespace: monitor
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      k8s-app: grafana
  template:
    metadata:
      labels:
        k8s-app: grafana
    spec:
      containers:
        - name: grafana
          image: grafana/grafana
          imagePullPolicy: Always
          ports:
            - containerPort: 3000
              protocol: TCP
          volumeMounts:
            - name: grafana-vol
              mountPath: /var/lib/grafana
              subPath: grafana
            - name: grafana-conf-vol
              mountPath: /etc/grafana/
      volumes:
      - name: grafana-vol
        persistentVolumeClaim:
          claimName: monitor-pvc
      - name: grafana-conf-vol
        configMap:
            name: grafana-config
      nodeSelector:
        "kubernetes.io/hostname": u20-dev-test02

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: monitor-ingress
  namespace: monitor
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: /$1
spec:
  rules:
    - http:
        paths:
          - path: /grafana/(.+)
            pathType: Prefix
            backend:
              service:
                name: grafana
                port:
                  number: 3000
          - path: /prometheus/(.+)
            pathType: Prefix
            backend:
              service:
                name: prometheus
                port:
                  number: 9090
